// utils/notificationUtils.ts

let audioElement: HTMLAudioElement | null = null;

/**
 * Y√™u c·∫ßu quy·ªÅn g·ª≠i th√¥ng b√°o t·ª´ tr√¨nh duy·ªát
 * @returns NotificationPermission - "granted", "denied", ho·∫∑c "default"
 */
export const requestNotificationPermission = async (): Promise<NotificationPermission> => {
  if (!("Notification" in window)) {
    console.warn("üö´ Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ Notification API");
    return "denied";
  }

  try {
    const permission = await Notification.requestPermission();

    switch (permission) {
      case "granted":
        console.log("‚úÖ ƒê√£ ƒë∆∞·ª£c c·∫•p quy·ªÅn g·ª≠i th√¥ng b√°o");
        break;
      case "denied":
        console.warn("‚ùå Ng∆∞·ªùi d√πng ƒë√£ t·ª´ ch·ªëi quy·ªÅn g·ª≠i th√¥ng b√°o");
        break;
      case "default":
        console.warn("‚ö†Ô∏è Ng∆∞·ªùi d√πng ƒë√£ ƒë√≥ng popup m√† kh√¥ng ch·ªçn g√¨");
        break;
    }

    return permission;
  } catch (error) {
    console.error("üö® L·ªói khi y√™u c·∫ßu quy·ªÅn g·ª≠i th√¥ng b√°o:", error);
    return "denied";
  }
};

/**
 * G·ª≠i th√¥ng b√°o tr√¨nh duy·ªát n·∫øu ƒë√£ ƒë∆∞·ª£c c·∫•p quy·ªÅn
 * @param title Ti√™u ƒë·ªÅ th√¥ng b√°o
 * @param options Tu·ª≥ ch·ªçn nh∆∞ body, icon, image...
 * @param soundUrl URL ƒë·∫øn file √¢m thanh custom (tu·ª≥ ch·ªçn)
 */
// soundUrl from assets
import soundUrl from "../assets/sound/notification.mp3";
export const sendNotification = (
  title: string,
  options?: NotificationOptions & { image?: string },
//   soundUrl?: string
): void => {
  if (!("Notification" in window)) {
    console.warn("üö´ Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ Notification API");
    return;
  }

  if (Notification.permission === "granted") {
    try {
      const notification = new Notification(title, options);

      // N·∫øu c√≥ √¢m thanh, ph√°t ngay
      if (soundUrl) {
        if (!audioElement) {
          audioElement = new Audio(soundUrl);
        } else {
          audioElement.src = soundUrl;
        }

        audioElement.play().catch((err) => {
          console.warn("üéµ Kh√¥ng th·ªÉ ph√°t √¢m thanh:", err);
        });
      }

      // Tu·ª≥ ch·ªçn: khi click v√†o notification ‚Üí chuy·ªÉn tab ho·∫∑c m·ªü URL
      notification.onclick = () => {
        window.focus();
      };
    } catch (error) {
      console.error("üö® G·ª≠i th√¥ng b√°o th·∫•t b·∫°i:", error);
    }
  } else {
    console.warn("‚ùó Kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o: ch∆∞a ƒë∆∞·ª£c c·∫•p quy·ªÅn");
  }
};
